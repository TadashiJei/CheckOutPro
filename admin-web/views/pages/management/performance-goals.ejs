<%- include('../../partials/header') %>
<%- include('../../partials/sidebar') %>

<div class="content-wrapper">
  <div class="content-header">
    <div class="container-fluid">
      <div class="row mb-2">
        <div class="col-sm-6">
          <h1 class="m-0"><%= title %></h1>
        </div>
        <div class="col-sm-6">
          <ol class="breadcrumb float-sm-right">
            <li class="breadcrumb-item"><a href="/dashboard">Home</a></li>
            <li class="breadcrumb-item"><a href="/management/employees">Employees</a></li>
            <li class="breadcrumb-item"><a href="/management/employees/<%= employee.id %>/edit"><%= employee.first_name %> <%= employee.last_name %></a></li>
            <li class="breadcrumb-item active">Performance Goals</li>
          </ol>
        </div>
      </div>
    </div>
  </div>

  <section class="content">
    <div class="container-fluid">
      <% if (messages.error) { %>
        <div class="alert alert-danger alert-dismissible">
          <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
          <h5><i class="icon fas fa-ban"></i> Error!</h5>
          <%= messages.error %>
        </div>
      <% } %>
      <% if (messages.success_msg) { %>
        <div class="alert alert-success alert-dismissible">
          <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
          <h5><i class="icon fas fa-check"></i> Success!</h5>
          <%= messages.success_msg %>
        </div>
      <% } %>

      <div class="row">
        <div class="col-md-4">
          <div class="card card-primary">
            <div class="card-header">
              <h3 class="card-title">Create New Goal</h3>
            </div>
            <form method="POST" action="/management/employees/<%= employee.id %>/goals">
              <div class="card-body">
                <div class="form-group">
                  <label for="goal_type">Goal Type</label>
                  <select id="goal_type" name="goal_type" class="form-control" required>
                    <option value="">Select Goal Type</option>
                    <option value="sales_target">Sales Target</option>
                    <option value="order_count">Order Count</option>
                    <option value="average_order_value">Average Order Value</option>
                    <option value="customer_satisfaction">Customer Satisfaction Rating</option>
                    <option value="processing_time">Order Processing Time</option>
                    <option value="inventory_accuracy">Inventory Accuracy</option>
                    <option value="unique_customers">Unique Customers</option>
                    <option value="custom">Custom Goal</option>
                  </select>
                </div>
                
                <div class="form-group">
                  <label for="target_value">Target Value</label>
                  <div class="input-group">
                    <div class="input-group-prepend" id="target-prefix">
                      <span class="input-group-text">$</span>
                    </div>
                    <input type="number" class="form-control" id="target_value" name="target_value" step="0.01" min="0" required>
                    <div class="input-group-append" id="target-suffix">
                      <span class="input-group-text"></span>
                    </div>
                  </div>
                </div>
                
                <div class="form-group">
                  <label for="target_date">Target Date</label>
                  <input type="date" class="form-control" id="target_date" name="target_date" required>
                </div>
                
                <div class="form-group">
                  <label for="description">Description</label>
                  <textarea class="form-control" id="description" name="description" rows="3" placeholder="Enter detailed description of the goal"></textarea>
                </div>
              </div>
              
              <div class="card-footer">
                <button type="submit" class="btn btn-primary">Create Goal</button>
              </div>
            </form>
          </div>
        </div>
        
        <div class="col-md-8">
          <div class="card">
            <div class="card-header">
              <h3 class="card-title">Performance Goals</h3>
            </div>
            <div class="card-body p-0">
              <table class="table table-striped">
                <thead>
                  <tr>
                    <th>Goal Type</th>
                    <th>Target</th>
                    <th>Target Date</th>
                    <th>Status</th>
                    <th>Progress</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody>
                  <% if (goals.length === 0) { %>
                    <tr>
                      <td colspan="6" class="text-center">No goals set</td>
                    </tr>
                  <% } else { %>
                    <% goals.forEach(function(goal) { %>
                      <tr>
                        <td><%= formatGoalType(goal.goal_type) %></td>
                        <td>
                          <% if (goal.goal_type.includes('sales') || goal.goal_type.includes('order_value')) { %>
                            $<%= parseFloat(goal.target_value).toFixed(2) %>
                          <% } else if (goal.goal_type === 'customer_satisfaction') { %>
                            <%= goal.target_value %> / 5
                          <% } else if (goal.goal_type === 'inventory_accuracy') { %>
                            <%= goal.target_value %>%
                          <% } else if (goal.goal_type === 'processing_time') { %>
                            <%= goal.target_value %> min
                          <% } else { %>
                            <%= goal.target_value %>
                          <% } %>
                        </td>
                        <td><%= new Date(goal.target_date).toLocaleDateString() %></td>
                        <td>
                          <% if (goal.status === 'completed') { %>
                            <span class="badge badge-success">Completed</span>
                          <% } else if (goal.status === 'failed') { %>
                            <span class="badge badge-danger">Failed</span>
                          <% } else if (goal.status === 'cancelled') { %>
                            <span class="badge badge-secondary">Cancelled</span>
                          <% } else { %>
                            <span class="badge badge-primary">Active</span>
                          <% } %>
                        </td>
                        <td>
                          <% 
                            let progress = 0;
                            if (goal.actual_value) {
                              progress = Math.min(100, (goal.actual_value / goal.target_value) * 100);
                            }
                          %>
                          <div class="progress">
                            <div class="progress-bar <%= progress >= 100 ? 'bg-success' : 'bg-primary' %>" role="progressbar" style="width: <%= progress %>%" aria-valuenow="<%= progress %>" aria-valuemin="0" aria-valuemax="100"><%= progress.toFixed(0) %>%</div>
                          </div>
                        </td>
                        <td>
                          <div class="btn-group">
                            <button type="button" class="btn btn-sm btn-info edit-goal" data-goal="<%= JSON.stringify(goal) %>">
                              <i class="fas fa-edit"></i>
                            </button>
                            <button type="button" class="btn btn-sm btn-danger delete-goal" data-id="<%= goal.id %>">
                              <i class="fas fa-trash"></i>
                            </button>
                          </div>
                        </td>
                      </tr>
                    <% }); %>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</div>

<!-- Edit Goal Modal -->
<div class="modal fade" id="edit-goal-modal" tabindex="-1" role="dialog" aria-labelledby="edit-goal-modal-label" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="edit-goal-modal-label">Edit Goal</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <form id="edit-goal-form" method="POST">
        <div class="modal-body">
          <div class="form-group">
            <label for="edit_goal_type">Goal Type</label>
            <select id="edit_goal_type" name="goal_type" class="form-control" required>
              <option value="">Select Goal Type</option>
              <option value="sales_target">Sales Target</option>
              <option value="order_count">Order Count</option>
              <option value="average_order_value">Average Order Value</option>
              <option value="customer_satisfaction">Customer Satisfaction Rating</option>
              <option value="processing_time">Order Processing Time</option>
              <option value="inventory_accuracy">Inventory Accuracy</option>
              <option value="unique_customers">Unique Customers</option>
              <option value="custom">Custom Goal</option>
            </select>
          </div>
          
          <div class="form-group">
            <label for="edit_target_value">Target Value</label>
            <div class="input-group">
              <div class="input-group-prepend" id="edit-target-prefix">
                <span class="input-group-text">$</span>
              </div>
              <input type="number" class="form-control" id="edit_target_value" name="target_value" step="0.01" min="0" required>
              <div class="input-group-append" id="edit-target-suffix">
                <span class="input-group-text"></span>
              </div>
            </div>
          </div>
          
          <div class="form-group">
            <label for="edit_target_date">Target Date</label>
            <input type="date" class="form-control" id="edit_target_date" name="target_date" required>
          </div>
          
          <div class="form-group">
            <label for="edit_description">Description</label>
            <textarea class="form-control" id="edit_description" name="description" rows="3" placeholder="Enter detailed description of the goal"></textarea>
          </div>
          
          <div class="form-group">
            <label for="edit_status">Status</label>
            <select id="edit_status" name="status" class="form-control" required>
              <option value="active">Active</option>
              <option value="completed">Completed</option>
              <option value="failed">Failed</option>
              <option value="cancelled">Cancelled</option>
            </select>
          </div>
          
          <div class="form-group">
            <label for="edit_actual_value">Actual Value</label>
            <div class="input-group">
              <div class="input-group-prepend" id="edit-actual-prefix">
                <span class="input-group-text">$</span>
              </div>
              <input type="number" class="form-control" id="edit_actual_value" name="actual_value" step="0.01" min="0">
              <div class="input-group-append" id="edit-actual-suffix">
                <span class="input-group-text"></span>
              </div>
            </div>
          </div>
          
          <div class="form-group">
            <label for="edit_completion_date">Completion Date</label>
            <input type="date" class="form-control" id="edit_completion_date" name="completion_date">
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-primary">Update Goal</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Delete Goal Modal -->
<div class="modal fade" id="delete-goal-modal" tabindex="-1" role="dialog" aria-labelledby="delete-goal-modal-label" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="delete-goal-modal-label">Confirm Delete</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        Are you sure you want to delete this goal? This action cannot be undone.
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
        <form id="delete-goal-form" method="POST">
          <button type="submit" class="btn btn-danger">Delete</button>
        </form>
      </div>
    </div>
  </div>
</div>

<%- include('../../partials/footer') %>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Format goal type
    function formatGoalType(type) {
      return type
        .split('_')
        .map(word => word.charAt(0).toUpperCase() + word.slice(1))
        .join(' ');
    }
    
    // Handle goal type change
    function handleGoalTypeChange(selectElement, prefixElement, suffixElement) {
      const goalType = selectElement.value;
      
      // Reset prefix and suffix
      prefixElement.style.display = 'none';
      prefixElement.querySelector('.input-group-text').textContent = '';
      suffixElement.style.display = 'none';
      suffixElement.querySelector('.input-group-text').textContent = '';
      
      // Set prefix and suffix based on goal type
      if (goalType.includes('sales') || goalType.includes('order_value')) {
        prefixElement.style.display = 'flex';
        prefixElement.querySelector('.input-group-text').textContent = '$';
      } else if (goalType === 'customer_satisfaction') {
        suffixElement.style.display = 'flex';
        suffixElement.querySelector('.input-group-text').textContent = '/ 5';
      } else if (goalType === 'inventory_accuracy') {
        suffixElement.style.display = 'flex';
        suffixElement.querySelector('.input-group-text').textContent = '%';
      } else if (goalType === 'processing_time') {
        suffixElement.style.display = 'flex';
        suffixElement.querySelector('.input-group-text').textContent = 'min';
      }
    }
    
    // Create goal form
    const goalTypeSelect = document.getElementById('goal_type');
    const targetPrefix = document.getElementById('target-prefix');
    const targetSuffix = document.getElementById('target-suffix');
    
    goalTypeSelect.addEventListener('change', function() {
      handleGoalTypeChange(this, targetPrefix, targetSuffix);
    });
    
    // Set default target date to 30 days from now
    const targetDateInput = document.getElementById('target_date');
    const defaultDate = new Date();
    defaultDate.setDate(defaultDate.getDate() + 30);
    targetDateInput.value = defaultDate.toISOString().split('T')[0];
    
    // Edit goal
    const editButtons = document.querySelectorAll('.edit-goal');
    const editForm = document.getElementById('edit-goal-form');
    const editGoalTypeSelect = document.getElementById('edit_goal_type');
    const editTargetPrefix = document.getElementById('edit-target-prefix');
    const editTargetSuffix = document.getElementById('edit-target-suffix');
    const editActualPrefix = document.getElementById('edit-actual-prefix');
    const editActualSuffix = document.getElementById('edit-actual-suffix');
    const editModal = $('#edit-goal-modal');
    
    editGoalTypeSelect.addEventListener('change', function() {
      handleGoalTypeChange(this, editTargetPrefix, editTargetSuffix);
      handleGoalTypeChange(this, editActualPrefix, editActualSuffix);
    });
    
    editButtons.forEach(button => {
      button.addEventListener('click', function() {
        const goal = JSON.parse(this.getAttribute('data-goal'));
        
        editForm.action = `/management/employees/<%= employee.id %>/goals/${goal.id}`;
        document.getElementById('edit_goal_type').value = goal.goal_type;
        document.getElementById('edit_target_value').value = goal.target_value;
        document.getElementById('edit_target_date').value = new Date(goal.target_date).toISOString().split('T')[0];
        document.getElementById('edit_description').value = goal.description || '';
        document.getElementById('edit_status').value = goal.status || 'active';
        document.getElementById('edit_actual_value').value = goal.actual_value || '';
        document.getElementById('edit_completion_date').value = goal.completion_date ? new Date(goal.completion_date).toISOString().split('T')[0] : '';
        
        // Update prefix and suffix
        handleGoalTypeChange(editGoalTypeSelect, editTargetPrefix, editTargetSuffix);
        handleGoalTypeChange(editGoalTypeSelect, editActualPrefix, editActualSuffix);
        
        editModal.modal('show');
      });
    });
    
    // Delete goal
    const deleteButtons = document.querySelectorAll('.delete-goal');
    const deleteForm = document.getElementById('delete-goal-form');
    const deleteModal = $('#delete-goal-modal');
    
    deleteButtons.forEach(button => {
      button.addEventListener('click', function() {
        const goalId = this.getAttribute('data-id');
        deleteForm.action = `/management/employees/<%= employee.id %>/goals/${goalId}?_method=DELETE`;
        deleteModal.modal('show');
      });
    });
  });
  
  // Helper function to format goal type
  function formatGoalType(type) {
    return type
      .split('_')
      .map(word => word.charAt(0).toUpperCase() + word.slice(1))
      .join(' ');
  }
</script>
