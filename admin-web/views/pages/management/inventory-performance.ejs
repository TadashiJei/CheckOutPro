<%- include('../../partials/header') %>
<%- include('../../partials/sidebar') %>

<div class="content-wrapper">
  <div class="content-header">
    <div class="container-fluid">
      <div class="row mb-2">
        <div class="col-sm-6">
          <h1 class="m-0"><%= title %></h1>
        </div>
        <div class="col-sm-6">
          <ol class="breadcrumb float-sm-right">
            <li class="breadcrumb-item"><a href="/dashboard">Home</a></li>
            <li class="breadcrumb-item"><a href="/management/employees">Employees</a></li>
            <li class="breadcrumb-item"><a href="/management/employees/<%= employee.id %>/inventory">Inventory Responsibilities</a></li>
            <li class="breadcrumb-item active">Performance</li>
          </ol>
        </div>
      </div>
    </div>
  </div>

  <section class="content">
    <div class="container-fluid">
      <div class="row">
        <div class="col-md-12">
          <div class="card">
            <div class="card-header">
              <h3 class="card-title">Filter Options</h3>
            </div>
            <div class="card-body">
              <form id="filter-form" method="GET">
                <div class="row">
                  <div class="col-md-5">
                    <div class="form-group">
                      <label for="startDate">Start Date:</label>
                      <input type="date" id="startDate" name="startDate" class="form-control" value="<%= filters.startDate || '' %>">
                    </div>
                  </div>
                  <div class="col-md-5">
                    <div class="form-group">
                      <label for="endDate">End Date:</label>
                      <input type="date" id="endDate" name="endDate" class="form-control" value="<%= filters.endDate || '' %>">
                    </div>
                  </div>
                  <div class="col-md-2">
                    <div class="form-group">
                      <label>&nbsp;</label>
                      <div>
                        <button type="submit" class="btn btn-primary btn-block">Apply Filters</button>
                        <div class="btn-group mt-2 w-100">
                          <button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Export
                          </button>
                          <div class="dropdown-menu">
                            <a class="dropdown-item" href="/management/employees/<%= employee.id %>/inventory/performance/export?format=csv<%= filters.startDate ? '&startDate=' + filters.startDate : '' %><%= filters.endDate ? '&endDate=' + filters.endDate : '' %>">CSV</a>
                            <a class="dropdown-item" href="/management/employees/<%= employee.id %>/inventory/performance/export<%= filters.startDate ? '?startDate=' + filters.startDate : '' %><%= !filters.startDate && filters.endDate ? '?endDate=' + filters.endDate : '' %><%= filters.startDate && filters.endDate ? '&endDate=' + filters.endDate : '' %>">JSON</a>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>

      <div class="row">
        <div class="col-md-3">
          <div class="card card-primary card-outline">
            <div class="card-body box-profile">
              <div class="text-center">
                <img class="profile-user-img img-fluid img-circle" src="/img/default-avatar.png" alt="User profile picture">
              </div>
              <h3 class="profile-username text-center"><%= employee.first_name %> <%= employee.last_name %></h3>
              <p class="text-muted text-center"><%= employee.position || 'Employee' %></p>
              <ul class="list-group list-group-unbordered mb-3">
                <li class="list-group-item">
                  <b>Active Assignments</b> <a class="float-right"><%= performanceData.assignments.filter(a => a.active).length %></a>
                </li>
                <li class="list-group-item">
                  <b>Total Counts</b> <a class="float-right"><%= performanceData.total_counts %></a>
                </li>
                <li class="list-group-item">
                  <b>Accuracy Rate</b> <a class="float-right"><%= performanceData.accuracy_rate.toFixed(2) %>%</a>
                </li>
              </ul>
              <div class="row">
                <div class="col-6">
                  <a href="/management/employees/<%= employee.id %>/inventory" class="btn btn-primary btn-block">
                    <i class="fas fa-boxes"></i> Assignments
                  </a>
                </div>
                <div class="col-6">
                  <a href="/management/employees/<%= employee.id %>/inventory/count" class="btn btn-success btn-block">
                    <i class="fas fa-clipboard-check"></i> Count
                  </a>
                </div>
              </div>
            </div>
          </div>
          
          <div class="card">
            <div class="card-header">
              <h3 class="card-title">Performance Summary</h3>
            </div>
            <div class="card-body p-0">
              <ul class="list-group list-group-flush">
                <li class="list-group-item d-flex justify-content-between align-items-center">
                  Total Inventory Counts
                  <span class="badge badge-primary badge-pill"><%= performanceData.total_counts %></span>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                  Accurate Counts
                  <span class="badge badge-success badge-pill"><%= performanceData.total_counts - performanceData.total_discrepancies %></span>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                  Discrepancies Found
                  <span class="badge badge-danger badge-pill"><%= performanceData.total_discrepancies %></span>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                  Inventory Adjustments
                  <span class="badge badge-warning badge-pill"><%= performanceData.total_adjustments %></span>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                  Accuracy Rate
                  <span class="badge badge-info badge-pill"><%= performanceData.accuracy_rate.toFixed(2) %>%</span>
                </li>
              </ul>
            </div>
          </div>
        </div>
        
        <div class="col-md-9">
          <div class="card">
            <div class="card-header p-2">
              <ul class="nav nav-pills">
                <li class="nav-item"><a class="nav-link active" href="#counts" data-toggle="tab">Inventory Counts</a></li>
                <li class="nav-item"><a class="nav-link" href="#discrepancies" data-toggle="tab">Discrepancies</a></li>
                <li class="nav-item"><a class="nav-link" href="#adjustments" data-toggle="tab">Adjustments</a></li>
                <li class="nav-item"><a class="nav-link" href="#charts" data-toggle="tab">Performance Charts</a></li>
              </ul>
            </div>
            <div class="card-body">
              <div class="tab-content">
                <div class="active tab-pane" id="counts">
                  <div class="table-responsive">
                    <table class="table table-bordered table-striped">
                      <thead>
                        <tr>
                          <th>Product</th>
                          <th>SKU</th>
                          <th>Expected Qty</th>
                          <th>Actual Qty</th>
                          <th>Discrepancy</th>
                          <th>Date</th>
                          <th>Notes</th>
                        </tr>
                      </thead>
                      <tbody>
                        <% if (performanceData.inventory_counts.length === 0) { %>
                          <tr>
                            <td colspan="7" class="text-center">No inventory counts recorded</td>
                          </tr>
                        <% } else { %>
                          <% performanceData.inventory_counts.forEach(function(count) { %>
                            <tr>
                              <td><%= count.product_name %></td>
                              <td><%= count.sku %></td>
                              <td><%= count.expected_quantity %></td>
                              <td><%= count.actual_quantity %></td>
                              <td>
                                <% const discrepancy = count.actual_quantity - count.expected_quantity; %>
                                <% if (discrepancy === 0) { %>
                                  <span class="badge badge-success">None</span>
                                <% } else if (discrepancy > 0) { %>
                                  <span class="badge badge-warning">+<%= discrepancy %></span>
                                <% } else { %>
                                  <span class="badge badge-danger"><%= discrepancy %></span>
                                <% } %>
                              </td>
                              <td><%= new Date(count.count_date).toLocaleString() %></td>
                              <td><%= count.notes || 'No notes' %></td>
                            </tr>
                          <% }); %>
                        <% } %>
                      </tbody>
                    </table>
                  </div>
                </div>
                
                <div class="tab-pane" id="discrepancies">
                  <div class="table-responsive">
                    <table class="table table-bordered table-striped">
                      <thead>
                        <tr>
                          <th>Product</th>
                          <th>SKU</th>
                          <th>Expected Qty</th>
                          <th>Actual Qty</th>
                          <th>Discrepancy</th>
                          <th>Date</th>
                          <th>Notes</th>
                        </tr>
                      </thead>
                      <tbody>
                        <% if (performanceData.discrepancies.length === 0) { %>
                          <tr>
                            <td colspan="7" class="text-center">No discrepancies found</td>
                          </tr>
                        <% } else { %>
                          <% performanceData.discrepancies.forEach(function(count) { %>
                            <tr>
                              <td><%= count.product_name %></td>
                              <td><%= count.sku %></td>
                              <td><%= count.expected_quantity %></td>
                              <td><%= count.actual_quantity %></td>
                              <td>
                                <% const discrepancy = count.actual_quantity - count.expected_quantity; %>
                                <% if (discrepancy > 0) { %>
                                  <span class="badge badge-warning">+<%= discrepancy %></span>
                                <% } else { %>
                                  <span class="badge badge-danger"><%= discrepancy %></span>
                                <% } %>
                              </td>
                              <td><%= new Date(count.count_date).toLocaleString() %></td>
                              <td><%= count.notes || 'No notes' %></td>
                            </tr>
                          <% }); %>
                        <% } %>
                      </tbody>
                    </table>
                  </div>
                </div>
                
                <div class="tab-pane" id="adjustments">
                  <div class="table-responsive">
                    <table class="table table-bordered table-striped">
                      <thead>
                        <tr>
                          <th>Product</th>
                          <th>SKU</th>
                          <th>Previous Qty</th>
                          <th>New Qty</th>
                          <th>Change</th>
                          <th>Date</th>
                          <th>Reason</th>
                        </tr>
                      </thead>
                      <tbody>
                        <% if (!performanceData.inventory_adjustments || performanceData.inventory_adjustments.length === 0) { %>
                          <tr>
                            <td colspan="7" class="text-center">No inventory adjustments recorded</td>
                          </tr>
                        <% } else { %>
                          <% performanceData.inventory_adjustments.forEach(function(adjustment) { %>
                            <tr>
                              <td><%= adjustment.product_name %></td>
                              <td><%= adjustment.sku %></td>
                              <td><%= adjustment.previous_quantity %></td>
                              <td><%= adjustment.new_quantity %></td>
                              <td>
                                <% const change = adjustment.new_quantity - adjustment.previous_quantity; %>
                                <% if (change === 0) { %>
                                  <span class="badge badge-secondary">0</span>
                                <% } else if (change > 0) { %>
                                  <span class="badge badge-success">+<%= change %></span>
                                <% } else { %>
                                  <span class="badge badge-danger"><%= change %></span>
                                <% } %>
                              </td>
                              <td><%= new Date(adjustment.adjustment_date).toLocaleString() %></td>
                              <td><%= adjustment.reason || 'No reason provided' %></td>
                            </tr>
                          <% }); %>
                        <% } %>
                      </tbody>
                    </table>
                  </div>
                </div>
                
                <div class="tab-pane" id="charts">
                  <div class="row">
                    <div class="col-md-6">
                      <div class="card">
                        <div class="card-header">
                          <h3 class="card-title">Accuracy Rate Over Time</h3>
                        </div>
                        <div class="card-body">
                          <canvas id="accuracy-chart" height="300"></canvas>
                        </div>
                      </div>
                    </div>
                    <div class="col-md-6">
                      <div class="card">
                        <div class="card-header">
                          <h3 class="card-title">Discrepancy Types</h3>
                        </div>
                        <div class="card-body">
                          <canvas id="discrepancy-chart" height="300"></canvas>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</div>

<%- include('../../partials/footer') %>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.0/dist/chart.min.js"></script>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Get performance data
    const performanceData = <%= JSON.stringify(performanceData) %>;
    
    // Create accuracy chart
    if (performanceData.inventory_counts && performanceData.inventory_counts.length > 0) {
      // Group counts by date
      const countsByDate = {};
      const accurateCountsByDate = {};
      
      performanceData.inventory_counts.forEach(count => {
        const date = new Date(count.count_date).toLocaleDateString();
        if (!countsByDate[date]) {
          countsByDate[date] = 0;
          accurateCountsByDate[date] = 0;
        }
        countsByDate[date]++;
        
        if (count.expected_quantity === count.actual_quantity) {
          accurateCountsByDate[date]++;
        }
      });
      
      // Calculate accuracy rate by date
      const accuracyRateByDate = {};
      for (const date in countsByDate) {
        accuracyRateByDate[date] = (accurateCountsByDate[date] / countsByDate[date]) * 100;
      }
      
      // Sort dates
      const sortedDates = Object.keys(accuracyRateByDate).sort((a, b) => new Date(a) - new Date(b));
      
      // Create chart
      const accuracyCtx = document.getElementById('accuracy-chart').getContext('2d');
      new Chart(accuracyCtx, {
        type: 'line',
        data: {
          labels: sortedDates,
          datasets: [{
            label: 'Accuracy Rate (%)',
            data: sortedDates.map(date => accuracyRateByDate[date]),
            backgroundColor: 'rgba(60, 141, 188, 0.2)',
            borderColor: 'rgba(60, 141, 188, 1)',
            borderWidth: 2,
            fill: true,
            tension: 0.4
          }]
        },
        options: {
          responsive: true,
          scales: {
            y: {
              beginAtZero: true,
              max: 100,
              title: {
                display: true,
                text: 'Accuracy Rate (%)'
              }
            }
          }
        }
      });
    }
    
    // Create discrepancy chart
    if (performanceData.discrepancies && performanceData.discrepancies.length > 0) {
      // Count positive and negative discrepancies
      let positiveDiscrepancies = 0;
      let negativeDiscrepancies = 0;
      
      performanceData.discrepancies.forEach(count => {
        const discrepancy = count.actual_quantity - count.expected_quantity;
        if (discrepancy > 0) {
          positiveDiscrepancies++;
        } else {
          negativeDiscrepancies++;
        }
      });
      
      // Create chart
      const discrepancyCtx = document.getElementById('discrepancy-chart').getContext('2d');
      new Chart(discrepancyCtx, {
        type: 'pie',
        data: {
          labels: ['Excess (Found More)', 'Shortage (Found Less)'],
          datasets: [{
            data: [positiveDiscrepancies, negativeDiscrepancies],
            backgroundColor: ['rgba(40, 167, 69, 0.8)', 'rgba(220, 53, 69, 0.8)'],
            borderColor: ['rgba(40, 167, 69, 1)', 'rgba(220, 53, 69, 1)'],
            borderWidth: 1
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: {
              position: 'bottom'
            },
            title: {
              display: true,
              text: 'Discrepancy Types'
            }
          }
        }
      });
    }
  });
</script>
